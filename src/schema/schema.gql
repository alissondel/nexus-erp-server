# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input AuthInput {
  email: String!
  password: String!
}

type AuthType {
  token: String!
  user: User!
}

type Brand {
  active: Boolean!
  createdAt: DateTime!
  createdUser: Int!
  deletedAt: DateTime!
  deletedUser: Int
  description: String!
  id: Int!
  updatedAt: DateTime!
  updatedUser: Int
}

type Category {
  active: Boolean!
  createdAt: DateTime!
  createdUser: Int!
  deletedAt: DateTime!
  deletedUser: Int
  description: String!
  id: Int!
  updatedAt: DateTime!
  updatedUser: Int
}

type City {
  active: Boolean!
  createdAt: DateTime!
  createdUser: Int!
  deletedAt: DateTime
  deletedUser: Int
  id: Int!
  name: String!
  state: State!
  stateId: Int!
  updatedAt: DateTime
  updatedUser: Int
}

input CreateBrandInput {
  active: Boolean = true
  createdAt: DateTime
  createdUser: Int
  description: String!
}

input CreateCategoryInput {
  active: Boolean = true
  createdAt: DateTime
  createdUser: Int
  description: String!
}

input CreateCityInput {
  active: Boolean = true
  createdAt: DateTime
  createdUser: Int
  name: String!
  stateId: Int!
}

input CreateGroupInput {
  active: Boolean = true
  createdAt: DateTime
  createdUser: Int
  description: String!
}

input CreateProductInput {
  active: Boolean = true
  altura: Float!
  amount: Float!
  brandId: Float!
  categoryId: Float!
  cfopOther: Float
  cfopSame: Float
  color: String!
  comprimento: Float!
  condicao: String!
  country: Float!
  createdAt: DateTime
  createdUser: Int
  csosn: Float
  description: String!
  ean: String!
  largura: Float!
  material: Float!
  measure: String!
  name: String!
  ncm: Float
  origem: Float
  peso: Float!
  preEncomenda: Boolean = false
  price: Float!
  skuPrincipal: String
  stock: Float!
  typeWarranty: Float!
  unidadeMedida: String
  warranty: Float!
}

input CreateStateInput {
  active: Boolean = true
  createdAt: DateTime
  createdUser: Int
  name: String!
  uf: String!
}

input CreateSubGroupInput {
  active: Boolean = true
  createdAt: DateTime
  createdUser: Int
  description: String!
}

input CreateSupplierInput {
  active: Boolean = true
  address: String!
  addressNumber: Float!
  categorySupplier: String!
  cep: String!
  cnpj: String!
  createdAt: DateTime
  createdUser: Int
  district: String!
  email: String!
  name: String!
  phoneNumber: String!
}

input CreateUserInput {
  active: Boolean = true
  cityId: Int!
  createdAt: DateTime
  createdUser: Int
  email: String!
  name: String!
  password: String
  phoneNumber: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input FilterBrandInput {
  active: Boolean
  createdAt: DateTime
  description: String
  id: Int
  order: OrderByFilterInput
  updatedAt: DateTime
}

input FilterCategoryInput {
  active: Boolean
  createdAt: DateTime
  description: String
  id: Int
  order: OrderByFilterInput
  updatedAt: DateTime
}

input FilterCityInput {
  active: Boolean
  createdAt: DateTime
  id: Int
  name: String
  order: OrderByFilterInput
  state: String
  stateId: Float
  updatedAt: DateTime
}

input FilterGroupInput {
  active: Boolean
  createdAt: DateTime
  description: String
  id: Int
  order: OrderByFilterInput
  updatedAt: DateTime
}

input FilterProductInput {
  active: Boolean
  altura: Float
  amount: Float
  brandId: Float
  categoryId: Float
  cfopOther: Float
  cfopSame: Float
  color: String
  comprimento: Float
  condicao: String
  country: Float
  createdAt: DateTime
  csosn: Float
  description: String
  ean: String
  id: Int
  largura: Float
  material: Float
  measure: String
  name: String
  ncm: Float
  order: OrderByFilterInput
  origem: Float
  peso: Float
  preEncomenda: Boolean
  price: Float
  skuPrincipal: String
  stock: Float
  typeWarranty: Float
  unidadeMedida: String
  updatedAt: DateTime
  warranty: Float
}

input FilterStateInput {
  active: Boolean
  createdAt: DateTime
  id: Int
  name: String
  order: OrderByFilterInput
  uf: String
  updatedAt: DateTime
}

input FilterSubGroupInput {
  active: Boolean
  createdAt: DateTime
  description: String
  id: Int
  order: OrderByFilterInput
  updatedAt: DateTime
}

input FilterSupplierInput {
  active: Boolean
  address: String
  addressNumber: Float
  categorySupplier: String
  cep: String
  cnpj: String
  createdAt: DateTime
  district: String
  email: String
  id: Int
  name: String
  order: OrderByFilterInput
  phoneNumber: String
  updatedAt: DateTime
}

input FilterUserInput {
  active: Boolean
  cityId: Float
  createdAt: DateTime
  email: String
  id: Int
  name: String
  order: OrderByFilterInput
  password: String
  phoneNumber: String
  typeUser: Float
  updatedAt: DateTime
}

type Group {
  active: Boolean!
  createdAt: DateTime!
  createdUser: Int!
  deletedAt: DateTime!
  deletedUser: Int
  description: String!
  id: Int!
  updatedAt: DateTime!
  updatedUser: Int
}

type Mutation {
  authenticate(data: AuthInput!): AuthType!
  createAdminOrRoot(data: CreateUserInput!): User!
  createBrand(data: CreateBrandInput!): Brand!
  createCategory(data: CreateCategoryInput!): Category!
  createCity(data: CreateCityInput!): City!
  createGroup(data: CreateGroupInput!): Group!
  createProduct(data: CreateProductInput!): Product!
  createState(data: CreateStateInput!): State!
  createSubGroup(data: CreateSubGroupInput!): SubGroup!
  createSupplier(data: CreateSupplierInput!): Supplier!
  createUser(data: CreateUserInput!): User!
  deleteBrand(id: Float!): Brand!
  deleteCategory(id: Float!): Category!
  deleteCity(id: Float!): City!
  deleteGroup(id: Float!): Group!
  deleteProduct(id: Float!): Product!
  deleteState(id: Float!): State!
  deleteSubGroup(id: Float!): SubGroup!
  deleteSupplier(id: Float!): Supplier!
  deleteUser(id: Float!): User!
  updateBrand(data: UpdateBrandInput!, id: Float!): Brand!
  updateCategory(data: UpdateCategoryInput!, id: Float!): Category!
  updateCity(data: UpdateCityInput!, id: Float!): City!
  updateGroup(data: UpdateGroupInput!, id: Float!): Group!
  updateProduct(data: UpdateProductInput!, id: Float!): Product!
  updateState(data: UpdateStateInput!, id: Float!): State!
  updateSubGroup(data: UpdateSubGroupInput!, id: Float!): SubGroup!
  updateSupplier(data: UpdateSupplierInput!, id: Float!): Supplier!
  updateUser(data: UpdateUserInput!, id: Float!): User!
  updateUserPassword(data: updatePasswordInput!): User!
}

input OrderByFilterInput {
  key: String! = "id"
  prefix: String
  value: String! = "ASC"
}

type PageInfo {
  count: Int!
  currentPage: Int!
  pagesCount: Int!
  perPage: Int!
}

type PaginatedBrandResponse {
  items: [Brand!]!
  pagination: PageInfo!
}

type PaginatedCategoryResponse {
  items: [Category!]!
  pagination: PageInfo!
}

type PaginatedCityResponse {
  items: [City!]!
  pagination: PageInfo!
}

type PaginatedGroupResponse {
  items: [Group!]!
  pagination: PageInfo!
}

type PaginatedProductResponse {
  items: [Product!]!
  pagination: PageInfo!
}

type PaginatedStateResponse {
  items: [State!]!
  pagination: PageInfo!
}

type PaginatedSubGroupResponse {
  items: [SubGroup!]!
  pagination: PageInfo!
}

type PaginatedSupplierResponse {
  items: [Supplier!]!
  pagination: PageInfo!
}

type PaginatedUserResponse {
  items: [User!]!
  pagination: PageInfo!
}

type Product {
  active: Boolean!
  altura: Float!
  amount: Float!
  brand: Brand!
  brandId: Float!
  category: Category!
  categoryId: Float!
  cfopOther: Float!
  cfopSame: Float!
  color: String!
  comprimento: Float!
  condicao: String!
  country: Float!
  createdAt: DateTime!
  createdUser: Int!
  csosn: Float!
  deletedAt: DateTime!
  deletedUser: Int
  description: String!
  ean: String!
  id: Int!
  largura: Float!
  material: Float!
  measure: String!
  name: String!
  ncm: Float!
  origem: Float!
  peso: Float!
  preEncomenda: Boolean!
  price: Float!
  skuPrincipal: String!
  stock: Float!
  typeWarranty: Float!
  unidadeMedida: String!
  updatedAt: DateTime!
  updatedUser: Int
  warranty: Float!
}

type Query {
  Suppliers(currentPage: Int = 1, filters: FilterSupplierInput!, perPage: Int = 10): PaginatedSupplierResponse!
  brand(active: Boolean, id: Float!): Brand!
  brands(currentPage: Int = 1, filters: FilterBrandInput!, perPage: Int = 10): PaginatedBrandResponse!
  categories(currentPage: Int = 1, filters: FilterCategoryInput!, perPage: Int = 10): PaginatedCategoryResponse!
  category(active: Boolean, id: Float!): Category!
  cities(currentPage: Int = 1, filters: FilterCityInput!, perPage: Int = 10): PaginatedCityResponse!
  city(active: Boolean, id: Float!): City!
  group(active: Boolean, id: Float!): Group!
  groups(currentPage: Int = 1, filters: FilterGroupInput!, perPage: Int = 10): PaginatedGroupResponse!
  product(active: Boolean, id: Float!): Product!
  products(currentPage: Int = 1, filters: FilterProductInput!, perPage: Int = 10): PaginatedProductResponse!
  state(active: Boolean, id: Float!): State!
  states(currentPage: Int = 1, filters: FilterStateInput!, perPage: Int = 10): PaginatedStateResponse!
  subGroup(active: Boolean, id: Float!): SubGroup!
  subGroups(currentPage: Int = 1, filters: FilterSubGroupInput!, perPage: Int = 10): PaginatedSubGroupResponse!
  supplier(active: Boolean, id: Float!): Supplier!
  user(active: Boolean, id: Float!): User!
  users(currentPage: Int = 1, filters: FilterUserInput!, perPage: Int = 10): PaginatedUserResponse!
}

type State {
  active: Boolean!
  createdAt: DateTime!
  createdUser: Int!
  deletedAt: DateTime!
  deletedUser: Int
  id: Int!
  name: String!
  uf: String!
  updatedAt: DateTime!
  updatedUser: Int
}

type SubGroup {
  active: Boolean!
  createdAt: DateTime!
  createdUser: Int!
  deletedAt: DateTime!
  deletedUser: Int
  description: String!
  id: Int!
  updatedAt: DateTime!
  updatedUser: Int
}

type Supplier {
  active: Boolean!
  address: String!
  addressNumber: Float!
  categorySupplier: String!
  cep: String!
  cnpj: String!
  createdAt: DateTime!
  createdUser: Int!
  deletedAt: DateTime!
  deletedUser: Int
  district: String!
  email: String!
  id: Int!
  name: String!
  phoneNumber: String!
  updatedAt: DateTime!
  updatedUser: Int
}

input UpdateBrandInput {
  description: String
  updatedAt: DateTime
  updatedUser: Int
}

input UpdateCategoryInput {
  description: String
  updatedAt: DateTime
  updatedUser: Int
}

input UpdateCityInput {
  name: String!
  stateId: Int!
  updatedAt: DateTime
  updatedUser: Int
}

input UpdateGroupInput {
  active: Boolean = true
  createdAt: DateTime
  createdUser: Int
  description: String
  updatedAt: DateTime
  updatedUser: Int
}

input UpdateProductInput {
  active: Boolean = true
  altura: Float
  amount: Float
  brandId: Float
  categoryId: Float
  cfopOther: Float
  cfopSame: Float
  color: String
  comprimento: Float
  condicao: String
  country: Float
  csosn: Float
  description: String
  ean: String
  largura: Float
  material: Float
  measure: String
  name: String
  ncm: Float
  origem: Float
  peso: Float
  preEncomenda: Boolean = false
  price: Float
  skuPrincipal: String
  stock: Float
  typeWarranty: Float
  unidadeMedida: String
  updatedAt: DateTime
  updatedUser: Int
  warranty: Float
}

input UpdateStateInput {
  name: String
  uf: String
  updatedAt: DateTime
  updatedUser: Int
}

input UpdateSubGroupInput {
  active: Boolean = true
  createdAt: DateTime
  createdUser: Int
  description: String
  updatedAt: DateTime
  updatedUser: Int
}

input UpdateSupplierInput {
  address: String
  addressNumber: Float
  categorySupplier: String
  cep: String
  cnpj: String
  district: String
  email: String
  name: String
  phoneNumber: String
  updatedAt: DateTime
  updatedUser: Int
}

input UpdateUserInput {
  cityId: Int!
  email: String!
  name: String
  phoneNumber: String
  updatedAt: DateTime
  updatedUser: Int
}

type User {
  active: Boolean!
  city: City!
  cityId: Int!
  createdAt: DateTime!
  createdUser: Int!
  deletedAt: DateTime!
  deletedUser: Int
  email: String!
  id: Int!
  name: String!
  password: String
  phoneNumber: String!
  typeUser: Float!
  updatedAt: DateTime!
  updatedUser: Int
}

input updatePasswordInput {
  confirmNewPassword: String!
  id: Int!
  newPassword: String!
  password: String!
}